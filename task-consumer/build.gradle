plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.palantir.docker' version '0.35.0'
}

group = 'com.fastcampus.taskconsumer'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // common module
    implementation project(':common')

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // MySQL
//    runtimeOnly 'com.mysql:mysql-connector-java:8.0.23'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // H2
//    runtimeOnly 'com.h2database:h2'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.tngtech.archunit:archunit:1.2.1'
}

//docker {
//    name rootProject.name + '-' + project.name + ':' + version
//    dockerfile file('./Dockerfile')
//    files tasks.bootJar.outputs.files
//    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
//}

tasks.named('test') {
    useJUnitPlatform()
}

